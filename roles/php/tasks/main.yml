---
- name: "Ensure the ondrej/php ppa is installed"
  ansible.builtin.apt_repository:
    repo: "ppa:ondrej/php"
    state: "present"

- name: "Ensure the required packages are installed"
  ansible.builtin.apt:
    dpkg_options: "force-confdef,force-confold"
    force: "yes"
    pkg:
      - php{{ php_version }}-fpm
      - php{{ php_version }}-cli
      - php{{ php_version }}-dev
      - php{{ php_version }}-pgsql
      - php{{ php_version }}-sqlite3
      - php{{ php_version }}-gd
      - php{{ php_version }}-curl
      - php{{ php_version }}-imap
      - php{{ php_version }}-mysql
      - php{{ php_version }}-mbstring
      - php{{ php_version }}-xml
      - php{{ php_version }}-zip
      - php{{ php_version }}-bcmath
      - php{{ php_version }}-soap
      - php{{ php_version }}-intl
      - php{{ php_version }}-readline
      - php{{ php_version }}-gmp
      - php{{ php_version }}-redis
      - php{{ php_version }}-memcached
      - php{{ php_version }}-msgpack
      - php{{ php_version }}-igbinary
      - php{{ php_version }}-swoole

- name: "Verify if composer is installed"
  ansible.builtin.stat:
    path: "/usr/local/bin/composer"
  register: composer_installed

- name: "Download composer if missing"
  when: not composer_installed.stat.exists
  block:
    - name: "Download composer installer"
      ansible.builtin.get_url:
        url: "https://getcomposer.org/installer"
        dest: "/tmp/composer-setup.php"
        mode: "0755"

    - name: "Install composer"
      ansible.builtin.command:
        cmd: "php /tmp/composer-setup.php --install-dir=/usr/local/bin --filename=composer"
        creates: "/usr/local/bin/composer"

    - name: "Remove composer installer"
      ansible.builtin.file:
        path: "/tmp/composer-setup.php"
        state: "absent"

- name: "Update miscellaneous configuration parameters in cli/php.ini"
  ansible.builtin.lineinfile:
    path: "/etc/php/{{ php_version }}/cli/php.ini"
    regexp: "^{{ item.find }}"
    line: "{{ item.replace }}"
    state: "present"
  loop:
    - { find: "error_reporting = .*", replace: "error_reporting = E_ALL" }
    - { find: "display_errors = .*", replace: "display_errors = On" }
    - { find: ";cgi.fix_pathinfo=1", replace: "cgi.fix_pathinfo=0" }
    - { find: "memory_limit = .*", replace: "memory_limit = 512M" }
    - { find: ";date.timezone.*", replace: "date.timezone = UTC" }

- name: "Turn off display_errors in fpm/php.ini"
  ansible.builtin.lineinfile:
    path: "/etc/php/{{ php_version }}/fpm/php.ini"
    regexp: "^display_errors = .*"
    line: "display_errors = Off"
    state: "present"

- name: "Ensure that Imagick is installed"
  ansible.builtin.apt:
    pkg: "libmagickwand-dev"
    state: "present"

- name: "Ensure the imagick.so extension is enabled"
  ansible.builtin.lineinfile:
    path: "/etc/php/{{ php_version }}/mods-available/imagick.ini"
    line: "extension=imagick.so"
    create: "yes"
    mode: "0644"
    state: "present"

- name: "Update miscellaneous configuration parameters in cli/php.ini"
  ansible.builtin.lineinfile:
    path: "/etc/php/{{ php_version }}/fpm/pool.d/www.conf"
    regexp: "^{{ item.find }}"
    line: "{{ item.replace }}"
    state: "present"
  loop:
    - { find: "user = www-data", replace: "user = {{ application_user }}" }
    - { find: "group = www-data", replace: "group = {{ application_user }}" }
    - { find: ';listen\.group.*', replace: "listen.group = {{ application_user }}" }
    - { find: ';listen\.mode.*', replace: "listen.mode = 0666" }
    - { find: ';request_terminate_timeout.*', replace: "request_terminate_timeout = 60" }
    - { find: 'pm.max_children.*=.*', replace: "pm.max_children = 20" }

- name: "Ensure the application user can restart php-fpm"
  ansible.builtin.lineinfile:
    path: "/etc/sudoers.d/php-fpm"
    line: "{{ application_user }} ALL=NOPASSWD: /usr/sbin/service php{{ php_version }}-fpm reload"
    create: true
    mode: "0440"
    state: "present"

- name: "Ensure the php sessions directory has proper permissions"
  ansible.builtin.file:
    path: "/var/lib/php/sessions"
    state: "directory"
    mode: "1733"

- name: "Ensure php-fpm is restarted"
  ansible.builtin.service:
    name: "php{{ php_version }}-fpm"
    state: "restarted"
